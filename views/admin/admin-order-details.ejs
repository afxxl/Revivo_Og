
<%- include('../partials/admin/admin-header.ejs') %>
<%- include('../partials/admin/admin-sidebar', {currentPage: 'orders'}) %>

<style>
.order-detail-container {
    max-width: 100%;
    padding: 1rem;
}

.order-card {
    background: white;
    border-radius: 0.75rem;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    padding: 2rem;
    margin-bottom: 2rem;
}

.status-select {
    border: 2px solid #d1d5db;
    border-radius: 0.5rem;
    padding: 0.625rem 2.5rem 0.625rem 1.25rem;
    appearance: none;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%236C7559'%3e%3cpath fill-rule='evenodd' d='M12.53 16.28a.75.75 0 01-1.06 0l-7.5-7.5a.75.75 0 011.06-1.06L12 14.69l6.97-6.97a.75.75 0 111.06 1.06l-7.5 7.5z' clip-rule='evenodd'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 1rem center;
    background-size: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    color: #1f2937;
    transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
}

.status-select:focus {
    outline: none;
    border-color: #6C7559;
    box-shadow: 0 0 0 3px rgba(108, 117, 89, 0.1);
}

.status-select:hover:not(:disabled) {
    border-color: #9ca3af;
}

.status-select:disabled {
    background-color: #f3f4f6;
    border-color: #e5e7eb;
    color: #6b7280;
    cursor: not-allowed;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%239ca3af'%3e%3cpath fill-rule='evenodd' d='M12.53 16.28a.75.75 0 01-1.06 0l-7.5-7.5a.75.75 0 011.06-1.06L12 14.69l6.97-6.97a.75.75 0 111.06 1.06l-7.5 7.5z' clip-rule='evenodd'/%3e%3c/svg%3e");
}

.return-alert {
    border-left: 4px solid;
    padding: 1.5rem;
    margin-bottom: 2rem;
    border-radius: 0.375rem;
}

.return-pending {
    border-color: #eab308;
    background-color: #fef9c3;
}

.return-approved {
    border-color: #22c55e;
    background-color: #dcfce7;
}

.return-rejected {
    border-color: #ef4444;
    background-color: #fee2e2;
}

.order-item-card {
    display: grid;
    grid-template-columns: 100px 1fr auto;
    gap: 1.5rem;
    padding: 1.5rem 0;
    border-bottom: 1px solid #e5e7eb;
}

.order-item-image {
    width: 100px;
    height: 100px;
    object-fit: cover;
    border-radius: 0.5rem;
}

.status-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-size: 0.875rem;
    font-weight: 500;
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
}

.pending { background-color: #fef3c7; color: #b45309; }
.confirmed { background-color: #dbeafe; color: #1e40af; }
.shipped { background-color: #d1fae5; color: #065f46; }
.delivered { background-color: #dcfce7; color: #166534; }
.cancelled { background-color: #fee2e2; color: #991b1b; }

.action-button {
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    font-weight: 500;
    transition: all 0.2s ease;
}

.btn-primary {
    background-color: #6C7559;
    color: white;
}

.btn-primary:hover {
    background-color: #5a6349;
}

.btn-danger {
    background-color: #dc2626;
    color: white;
}

.btn-danger:hover {
    background-color: #b91c1c;
}

.final-status-message {
    font-style: italic;
    color: #6b7280;
    padding: 0.625rem 0;
}

@media (max-width: 768px) {
    .order-item-card {
        grid-template-columns: 1fr;
    }
    
    .status-controls {
        flex-direction: column;
        gap: 1rem;
    }
}
</style>

<div class="flex-1 overflow-auto p-3 md:p-6 pt-20">
    <div class="order-detail-container max-w-7xl mx-auto">
        <!-- Return Request Alert -->
        <% if (order.return?.requested) { %>
        <div class="mb-6 p-4 rounded-lg 
            <%= order.return.status === 'pending' ? 'bg-yellow-50 border-l-4 border-yellow-400' : '' %>
            <%= order.return.status === 'approved' ? 'bg-green-50 border-l-4 border-green-400' : '' %>
            <%= order.return.status === 'rejected' ? 'bg-red-50 border-l-4 border-red-400' : '' %>">
            <h3 class="font-bold mb-2">Return Request</h3>
            <p class="mb-1"><span class="font-medium">Reason:</span> <%= order.return.reason %></p>
            <p class="mb-1"><span class="font-medium">Status:</span> 
                <span class="capitalize"><%= order.return.status %></span>
            </p>
            <p class="text-sm text-gray-500">Requested on: <%= order.return.requestedAt.toLocaleString() %></p>
            
            <% if (order.return.status === 'pending') { %>
                <div class="flex gap-2 mt-3">
                    <button onclick="handleReturn('approve', '<%= order._id %>')" 
                            class="px-3 py-1 bg-green-500 text-white rounded text-sm">
                        Approve
                    </button>
                    <button onclick="handleReturn('reject', '<%= order._id %>')" 
                            class="px-3 py-1 bg-red-500 text-white rounded text-sm">
                        Reject
                    </button>
                </div>
            <% } %>
        </div>
        <% } %>

        <!-- Order Header -->
        <div class="order-card">
            <div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6">
                <div>
                    <h1 class="text-2xl font-bold text-gray-900">Order #<%= order.orderId %></h1>
                    <p class="text-gray-600 mt-1">
                        Placed on <%= order.createdOn.toLocaleDateString('en-US', { 
                            year: 'numeric', 
                            month: 'long', 
                            day: 'numeric' 
                        }) %>
                    </p>
                </div>
                
                <div class="flex items-center gap-4">
                    <% if (order.status === 'Return Request') { %>
                        <!-- Return Request Actions -->
                        <div class="flex gap-2">
                            <button onclick="handleReturn('approve', '<%= order._id %>')" 
                                    class="px-4 py-2 bg-green-500 text-white rounded-md">
                                Approve Return
                            </button>
                            <button onclick="handleReturn('reject', '<%= order._id %>')" 
                                    class="px-4 py-2 bg-red-500 text-white rounded-md">
                                Reject Return
                            </button>
                        </div>
                    <% } else if (!['Delivered', 'Cancelled', 'Returned'].includes(order.status)) { %>
                        <!-- Regular Status Update -->
                        <select id="statusSelect" class="status-select">
                            <% 
                            const statusTransitions = {
                                'Pending': ['Confirmed', 'Cancelled'],
                                'Confirmed': ['Shipped', 'Cancelled'],
                                'Shipped': ['Delivered', 'Cancelled']
                            };
                            const allowedStatuses = statusTransitions[order.status] || [];
                            %>
                            
                            <option value="<%= order.status %>" selected>Current: <%= order.status %></option>
                            <% allowedStatuses.forEach(status => { %>
                                <option value="<%= status %>"><%= status %></option>
                            <% }) %>
                        </select>
                        
                        <button onclick="updateStatus()" class="action-button btn-primary">
                            Update Status
                        </button>
                    <% } else { %>
                        <!-- Final Status Display -->
                        <div class="final-status-message">
                            Status: <%= order.status %> (no further actions)
                        </div>
                    <% } %>
                </div>
            </div>

            <!-- Two Column Layout -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                <!-- Shipping Information -->
                <div>
                    <h2 class="text-xl font-semibold mb-4 text-gray-900">Shipping Information</h2>
                    <div class="space-y-2 text-gray-700">
                        <p><%= order.address.name %></p>
                        <p><%= order.address.address %></p>
                        <p><%= order.address.city %>, <%= order.address.state %> <%= order.address.pincode %></p>
                        <p class="mt-4"><span class="font-medium">Contact:</span> <%= order.address.phone %></p>
                        <p><span class="font-medium">Email:</span> <%= order.user.email %></p>
                    </div>
                </div>

                <!-- Order Summary -->
                <div>
                    <h2 class="text-xl font-semibold mb-4 text-gray-900">Order Summary</h2>
                    <div class="space-y-4">
                        <div class="flex justify-between">
                            <span class="text-gray-600">Payment Method</span>
                            <span class="font-medium"><%= order.paymentMethod %></span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-600">Order Status</span>
                            <span class="status-badge <%= order.status.toLowerCase() %>">
                                <%= order.status %>
                            </span>
                        </div>
                        <div class="pt-4 border-t border-gray-200">
                            <div class="flex justify-between text-lg font-semibold">
                                <span>Total Amount</span>
                                <span>$<%= order.finalAmount.toFixed(2) %></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Items -->
        <div class="order-card">
            <h2 class="text-xl font-semibold mb-6 text-gray-900">Order Items</h2>
            <div class="space-y-6">
                <% order.orderItems.forEach(item => { %>
                <div class="order-item-card">
                    <img src="<%= item.product.productImage[0] %>" 
                         alt="<%= item.product.productName %>" 
                         class="order-item-image">
                    <div>
                        <h3 class="text-lg font-medium text-gray-900"><%= item.product.productName %></h3>
                        <p class="text-gray-600">Size: <%= item.size || 'N/A' %></p>
                        <p class="text-gray-600">Condition: <%= item.condition %></p>
                    </div>
                    <div class="text-right">
                        <p class="text-lg font-semibold">$<%= (item.price * item.quantity).toFixed(2) %></p>
                        <p class="text-sm text-gray-600">Quantity: <%= item.quantity %></p>
                        <p class="text-sm text-gray-600">$<%= item.price.toFixed(2) %> each</p>
                    </div>
                </div>
                <% }) %>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
function updateStatus() {
    const newStatus = document.getElementById('statusSelect').value;
    
    Swal.fire({
        title: 'Confirm Status Update',
        text: `Are you sure you want to update status to ${newStatus}?`,
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#6C7559',
        cancelButtonColor: '#6b7280',
        confirmButtonText: 'Yes, Update'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/admin/orders/<%= order._id %>/update-status`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ status: newStatus })
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(err => { throw err; });
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Status Updated!',
                        text: data.message,
                        confirmButtonColor: '#6C7559'
                    }).then(() => window.location.reload());
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Update Failed',
                    text: error.message || 'Failed to update order status',
                    confirmButtonColor: '#6C7559'
                });
            });
        }
    });
}

function handleReturn(action, orderId) {
    Swal.fire({
        title: `Confirm ${action === 'approve' ? 'Approval' : 'Rejection'}`,
        text: `Are you sure you want to ${action} this return request?`,
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#6C7559',
        cancelButtonColor: '#d33',
        confirmButtonText: `Yes, ${action}`
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/admin/orders/${orderId}/handle-return`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ action })
            })
            .then(async response => {
                const data = await response.json();
                if (!response.ok) {
                    throw new Error(data.message || 'Failed to process request');
                }
                return data;
            })
            .then(data => {
                Swal.fire({
                    title: 'Success!',
                    text: data.message,
                    icon: 'success',
                    confirmButtonColor: '#6C7559'
                }).then(() => {
                    location.reload();
                });
            })
            .catch(err => {
                console.error('Error:', err);
                Swal.fire({
                    title: 'Error!',
                    text: err.message,
                    icon: 'error',
                    confirmButtonColor: '#6C7559'
                });
            });
        }
    });
}
</script>

<%- include('../partials/admin/admin-footer') %>

