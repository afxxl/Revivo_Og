<%- include('../partials/admin/admin-header.ejs') %>
<%- include('../partials/admin/admin-sidebar', {currentPage: 'category'}) %>
<style>
    .category-image {
        width: 64px;
        height: 64px;
        object-fit: cover;
        border-radius: 0.375rem;
    }
    .image-placeholder {
        width: 64px;
        height: 64px;
        background-color: #f3f4f6;
        border-radius: 0.375rem;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>


<div class="flex-1 overflow-auto p-3 md:p-6 pt-20">
    <div class="p-4 md:p-6 bg-white shadow-sm">
        <div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
            <h1 class="text-2xl font-semibold text-gray-800">Categories</h1>
            <button onclick="openAddModal()" 
                    class="px-4 py-2 bg-[#6C7559] hover:bg-[#5a6349] text-white rounded-lg text-sm">
                Add New Category
            </button>
        </div>
        <div class="relative w-full mt-4">
            <input type="text" 
                   placeholder="Search categories..." 
                   class="w-full pl-10 pr-4 py-2 md:py-3 text-sm md:text-base border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#6C7559] focus:border-transparent shadow-sm"
                   onkeyup="searchCategories(this.value)">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg class="w-4 h-4 md:w-5 md:h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                </svg>
            </div>
        </div>
    </div>

    <div class="hidden md:block overflow-x-auto m-6">
        <table class="w-full whitespace-nowrap bg-white rounded-lg shadow">
            <thead>
                <tr class="bg-gray-50 text-left">
<th class="px-6 py-3 text-xs font-medium text-gray-500 uppercase">Image</th>
                    <th class="px-6 py-3 text-xs font-medium text-gray-500 uppercase">Category Name</th>
                    <th class="px-6 py-3 text-xs font-medium text-gray-500 uppercase">Description</th>
                    <th class="px-6 py-3 text-xs font-medium text-gray-500 uppercase">Status</th>
                    <th class="px-6 py-3 text-xs font-medium text-gray-500 uppercase">Actions</th>
                </tr>
            </thead>
<tbody class="divide-y divide-gray-200">
    <% cat.forEach(category => { %>
        <tr class="hover:bg-gray-50">
            <td class="px-6 py-4">
                <% if (category.image) { %>
                    <img src="<%= category.image %>" alt="<%= category.name %>" 
                         class="w-16 h-16 object-cover rounded-md">
                <% } else { %>
                    <div class="w-16 h-16 bg-gray-100 rounded-md flex items-center justify-center">
                        <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                        </svg>
                    </div>
                <% } %>
            </td>
            <td class="px-6 py-4 text-sm text-gray-900"><%= category.name %></td>
            <td class="px-6 py-4 text-sm text-gray-500"><%= category.description %></td>
            <td class="px-6 py-4 text-sm text-gray-500">
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium <%= category.isListed ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>">
                    <%= category.isListed ? 'Listed' : 'Unlisted' %>
                </span>
            </td>
            <td class="px-6 py-4 text-sm text-gray-500">
                <div class="flex items-center space-x-3">
                    <a href="/admin/editCategory/<%= category._id %>" class="text-blue-600 hover:text-blue-800">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                  d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                        </svg>
                    </a>
                    <a href="/admin/toggleCategory/<%= category._id %>" class="text-gray-600 hover:text-gray-800">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                  d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
                        </svg>
                    </a>
                </div>
            </td>
        </tr>
    <% }); %>
</tbody>
                    </table>
    </div>

<div class="md:hidden space-y-4 m-4">
    <% cat.forEach(category => { %>
        <div class="bg-white p-4 rounded-lg shadow">
            <div class="flex items-start gap-4">
                <% if (category.image) { %>
                    <img src="<%= category.image %>" alt="<%= category.name %>" 
                         class="w-16 h-16 object-cover rounded-md">
                <% } else { %>
                    <div class="w-16 h-16 bg-gray-100 rounded-md flex items-center justify-center">
                        <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                        </svg>
                    </div>
                <% } %>
                <div class="flex-1">
                    <div class="flex justify-between items-start">
                        <div>
                            <h3 class="font-medium text-gray-900"><%= category.name %></h3>
                            <p class="text-sm text-gray-500 mt-1"><%= category.description %></p>
                        </div>
                        <span class="px-2 py-1 text-xs font-semibold rounded-full 
                            <%= category.isListed ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>">
                            <%= category.isListed ? 'Listed' : 'Unlisted' %>
                        </span>
                    </div>
                    <div class="mt-4 flex justify-end space-x-3">
                        <a href="/admin/editCategory/<%= category._id %>" class="text-blue-600 hover:text-blue-800 p-2">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                      d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                            </svg>
                        </a>
                        <a href="/admin/toggleCategory/<%= category._id %>" class="text-gray-600 hover:text-gray-800 p-2">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                      d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
                            </svg>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    <% }); %>
</div>
    <% if (totalPages > 1) { %>
        <div class="flex justify-center items-center space-x-2 my-6">
            <% for(let i = 1; i <= totalPages; i++) { %>
                <a href="?page=<%= i %>" 
                   class="px-3 py-1 rounded <%= currentPage === i ? 'bg-[#6C7559] text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300' %>">
                    <%= i %>
                </a>
            <% } %>
        </div>
    <% } %>
</div>

<div id="addModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
    <div class="min-h-screen flex items-center justify-center p-4">
        <div class="bg-white rounded-lg p-6 max-w-md w-full mx-4 relative">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-semibold text-gray-900">Add New Category</h3>
                <button type="button" onclick="closeAddModal()" class="text-gray-400 hover:text-gray-500">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                    </svg>
                </button>
            </div>
            <form action="/admin/addCategory" method="POST" class="space-y-4" onsubmit="handleFormSubmit(event)">
                <div>
                    <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Category Name</label>
                    <input type="text" id="name" name="name" required
                           class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#6C7559] focus:border-transparent">
                    <p id="name-error" class="error-message text-red-500 text-sm mt-1" style="display: none;"></p>
                </div>
                <div>
                    <label for="description" class="block text-sm font-medium text-gray-700 mb-1">Description</label>
                    <textarea id="description" name="description" rows="3" required
                              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#6C7559] focus:border-transparent"></textarea>
                    <p id="description-error" class="error-message text-red-500 text-sm mt-1" style="display: none;"></p>
                </div>
<div>
    <label for="categoryImage" class="block text-sm font-medium text-gray-700 mb-1">Category Image</label>
    <input type="file" id="categoryImage" name="categoryImage" 
           class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#6C7559] focus:border-transparent">
    <p id="image-error" class="error-message text-red-500 text-sm mt-1" style="display: none;"></p>
  </div>
                <div class="flex justify-end space-x-4 mt-6">
                    <button type="button" onclick="closeAddModal()"
                            class="px-4 py-2 text-sm text-gray-600 hover:text-gray-800 font-medium">
                        Cancel
                    </button>
                    <button type="submit" 
                            class="px-4 py-2 bg-[#6C7559] hover:bg-[#5a6349] text-white rounded-lg text-sm">
                        Add Category
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    function openAddModal() {
        document.getElementById('addModal').classList.remove('hidden');
        document.body.style.overflow = 'hidden'; // Prevent scrolling when modal is open
    }

    function closeAddModal() {
        document.getElementById('addModal').classList.add('hidden');
        document.body.style.overflow = 'auto'; // Restore scrolling
    }

    document.getElementById('addModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeAddModal();
        }
    });

    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeAddModal();
        }
    });
function handleFormSubmit(event) {
    event.preventDefault();
    if (!validateForm()) {
        return;
    }
    
    const formData = new FormData();
    formData.append('name', document.getElementById("name").value);
    formData.append('description', document.getElementById("description").value);
    
    const imageInput = document.getElementById("categoryImage");
    if (imageInput.files.length > 0) {
        formData.append('categoryImage', imageInput.files[0]);
    }

    fetch('/admin/addCategory', {
        method: 'POST',
        body: formData
    }).then(response => {
        if (!response.ok) {
            return response.json().then(err => {
                throw new Error(err.error);
            });
        }
        return response.json();
    }).then(data => {
        location.reload();
    }).catch(error => {
        Swal.fire({
            icon: 'error',
            title: "Oops",
            text: error.message === "Category already exists"
                ? "Category already exists"
                : "An error occurred while adding the category"
        });
    });
}

    
    function validateForm() {
        clearErrorMessages();
        const name = document.getElementById("name").value.trim();
        const description = document.getElementById("description").value.trim();
        const imageInput = document.getElementById("categoryImage");
        let isValid = true;

        if (name === "") {
            displayErrorMessage("name-error", "Please enter a name");
            isValid = false;
        } else if (!/^[a-zA-Z\s]+$/.test(name)) {
            displayErrorMessage("name-error", "Category name should contain only alphabetic characters");
            isValid = false;
        }

        if (description === "") {
            displayErrorMessage("description-error", "Please enter a description");
            isValid = false;
        }
if (imageInput && imageInput.files.length > 0) {
    const file = imageInput.files[0];
    const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp','image/jpg'];
    if (!validTypes.includes(file.type)) {
      displayErrorMessage("image-error", "Please upload a valid image (JPEG, PNG, GIF, or WEBP)");
      isValid = false;
    }
    if (file.size > 12 * 1024 * 1024) { // 12MB
      displayErrorMessage("image-error", "Image must be less than 12MB");
      isValid = false;
    }
  }

        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        if (errorElement) {
            errorElement.innerText = message;
            errorElement.style.display = 'block';
        }
    }

    function clearErrorMessages() {
        const errorElements = document.querySelectorAll(".error-message");
        errorElements.forEach(element => {
            element.innerText = "";
            element.style.display = "none";
        });
    }

document.querySelectorAll('a[href^="/admin/toggleCategory/"]').forEach(link => {
    link.addEventListener('click', function(e) {
        e.preventDefault();
        
        Swal.fire({
            title: 'Are you sure?',
            text: "You're about to change the listing status of this category",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#6C7559',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, change it!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(this.getAttribute('href'), {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(err => {
                            throw new Error(err.error);
                        });
                    }
                    return response.json();
                })
                .then(data => {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: data.message
                    }).then(() => {
                        location.reload();
                    });
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.message
                    });
                });
            }
        });
    });
});

function searchCategories(query) {
    window.location.href = `/admin/category?search=${encodeURIComponent(query)}`;
}

</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<%- include('../partials/admin/admin-footer') %>
